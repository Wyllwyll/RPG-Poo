(()=>{var o=class{constructor(t,e,s){this.name=t,this.health=e,this.currentHealth=e,this.strength=s,this.lvl=1,this.xp=0,this.flying=!1}getName(){return this.name}setName(t){this.name=t}getHealth(){return this.health}setHealth(t){this.currentHealth=t}getCurrentHealth(){return this.currentHealth}getStrength(){return this.strength}setStrength(t){this.strength=t}getLvl(){return this.lvl}setLvl(t){this.lvl=t}getXp(){return this.xp}setXp(t){this.xp=t}attack(t){let e=t.setDamage(this.getStrength()*this.getLvl());return`attaque avec Strengh * lvl=> ${this.getStrength()*this.getLvl()}. ${e}`}die(){return`... bye bye ${this.getName()}`}isAlive(){return!(this.getCurrentHealth()<=0)}setDamage(t){return this.setHealth(this.getCurrentHealth()-t),`${this.getName()} re\xE7oit ${t} de d\xE9gat, sa health passe \xE0 ${this.getCurrentHealth()}`}raiseXp(t){let e;return this.getXp()+t>=10?(this.setXp(this.getXp()+t-10),this.setLvl(this.getLvl()+1),e=`${this.getName()} gagne un Level : Lvl ${this.getLvl()}`):(this.setXp(this.getXp()+t),e=`l'XP de ${this.getName()} augmente de ${t}`),e}regeneration(t){return this.setHealth(this.getCurrentHealth()+Math.round(.1*t)),this.getCurrentHealth()>this.getHealth()?(this.setHealth(this.getHealth()),`et revient \xE0 son maximun ${this.getHealth()}`):`${t}/100*10 = ${Math.round(.1*t)}`}};var n=class extends o{};var l=class extends n{constructor(e,s,a){super(e,s,a);this.round=0}attack(e){let s=Math.round(this.getStrength()*this.getLvl()*Math.pow(1.1,this.round)),a=e.setDamage(s);return this.round+=1,`attaque avec Strengh * lvl et bonus de niveau ${this.round} => ${s}, sa health passe \xE0 ${this.getCurrentHealth()}. ${a}`}};var g=class{constructor(t,e){this.round=1;this.stat=[];this.hero=t,this.opponent=e}toDeath(){for(this.stat.push(`${this.hero.getRace()} vs ${this.opponent.constructor.name}`);this.hero.isAlive()&&this.opponent.isAlive();)this.round%2==1?this.stat.push(`Tour ${this.round}: ${this.hero.getName()} ${this.hero.attack(this.opponent)}`):this.stat.push(`Tour ${this.round}: ${this.opponent.getName()} ${this.opponent.attack(this.hero)}`),this.round+=1;this.hero.isAlive()?(this.stat.push(`... bye bye ${this.opponent.getName()}`),this.stat.push("Le combat est fini"),this.stat.push(this.hero.raiseXp(2)),this.stat.push(`${this.hero.getName()} r\xE9cupere 10% de health de ${this.opponent.getName()}, ${this.hero.regeneration(this.opponent.getHealth())}`)):(this.stat.push(`... bye bye ${this.hero.getName()}`),this.stat.push(`Le hero ${this.hero.getName()} est mort.`),this.stat.push("La partie est termin\xE9e")),console.log(this.stat)}random1(){Math.floor(Math.random()*10),console.log(this.random1)}};var m=class extends n{constructor(t,e,s){super(t,e,s)}setDamage(t){return this.setHealth(Math.round(this.getCurrentHealth()-t*.7)),`${this.getName()} re\xE7oit ${t} de d\xE9gat -30% => ${Math.round(t*.7)}, sa health passe \xE0 ${this.getCurrentHealth()}`}};var c=class extends n{constructor(e,s,a){super(e,s,a);this.round=0}attack(e){switch(this.round){case 0:return this.round+=1,super.attack(e);case 1:return this.fly(),this.round+=1,"s'envole";case 2:return this.round=0,`attaque avec Strengh * lvl et un bonus de 10% => ${Math.round(this.getStrength()*this.getLvl()*1.1)}, ${this.attackfromsky(e)}`}}fly(){this.flying=!0}attackfromsky(e){return this.flying=!1,e.setDamage(Math.round(this.getStrength()*1.1*this.getLvl()))}setDamage(e){return this.flying?(this.setHealth(Math.round(this.getCurrentHealth()-Math.round(e*.4))),`${this.getName()} re\xE7oit ${e} de d\xE9gat -60% de resistance => ${Math.round(e*.4)}, sa health passe \xE0 ${this.getCurrentHealth()}`):(this.setHealth(Math.round(this.getCurrentHealth()-Math.round(e*.5))),`${this.getName()} re\xE7oit ${e} de d\xE9gat -50% de resistance => ${Math.round(e*.5)}, sa health passe \xE0 ${this.getCurrentHealth()}`)}};var d=class extends n{constructor(t,e,s){super(t,e,s)}setDamage(t){return Math.random()*100<=50?(this.setHealth(this.getCurrentHealth()-t),`${this.getName()} re\xE7oit ${t} de d\xE9gat, sa health passe \xE0 ${this.getCurrentHealth()}`):`${this.getName()} re\xE7oit ${t} de d\xE9gat mais annule les d\xE9gats, sa health reste ${this.getCurrentHealth()}`}};var p=class extends n{constructor(e,s,a){super(e,s,a);this.round=0}attack(e){switch(this.round){case 0:return this.round+=1,super.attack(e);case 1:return this.round+=1,this.fly(),"s'envole";case 2:return this.round=0,`attaque avec Strengh * lvl et un bonus de 10% => ${this.getStrength()*this.getLvl()*1.1}, ${this.attackfromsky(e)}`}}fly(){this.flying=!0}attackfromsky(e){return this.flying=!1,e.setDamage(Math.round(this.getStrength()*1.1*this.getLvl()))}setDamage(e){return this.flying?(this.setHealth(Math.round(this.getCurrentHealth()-e*.9)),`${this.getName()} re\xE7oit ${e} de d\xE9gat -10% de resistance => ${e*.9}, sa health passe \xE0 ${this.getCurrentHealth()}`):(this.setHealth(this.getCurrentHealth()-e),`${this.getName()} re\xE7oit ${e} de d\xE9gat, sa health passe \xE0 ${this.getCurrentHealth()}`)}};var u=class extends o{constructor(e,s,a,k){super(e,s,a);this.race=k}getRace(){return this.race}setRace(e){this.race=e}attack(e){let s;switch(this.race){case"Elf":return e.flying?(s=Math.round(this.getStrength()*this.getLvl()*1.1),`attaque avec Strengh * lvl et un bonus de 10% => ${s}, ${e.setDamage(s)}`):(s=Math.round(this.getStrength()*this.getLvl()*.9),`attaque avec Strengh * lvl et un malus de 10% => ${s}, ${e.setDamage(s)}`);case"Human":return e.flying?(s=Math.round(this.getStrength()*this.getLvl()*.9),`attaque avec Strengh * lvl et un malus de 10% => ${s}, ${e.setDamage(s)}`):(s=Math.round(this.getStrength()*this.getLvl()*1.1),`attaque avec Strengh * lvl et un bonus de 10% => ${s}, ${e.setDamage(s)}`);case"Dwarf":return s=this.getStrength()*this.getLvl(),`attaque avec Strengh * lvl=> ${s}, ${e.setDamage(s)}`}}setDamage(e){return this.race=="Dwarf"&&Math.random()*100<=20?(this.setHealth(this.getCurrentHealth()-Math.round(e/2)),`${this.getName()} re\xE7oit ${e} de d\xE9gat -50% => ${Math.round(e/2)}, sa health passe \xE0 ${this.getCurrentHealth()}`):(this.setHealth(this.getCurrentHealth()-e),`${this.getName()} re\xE7oit ${e} de d\xE9gat, sa health passe \xE0 ${this.getCurrentHealth()}`)}};var $=class extends n{constructor(t,e,s){super(t,e,s)}setDamage(t){return this.setHealth(this.getCurrentHealth()-Math.round(t*.5)),`${this.getName()} re\xE7oit ${t} de d\xE9gat -50% de resistance => ${Math.round(t*.5)}, sa health passe \xE0 ${this.getCurrentHealth()}`}};var f,i;var E=document.getElementById("selectHeros"),v=[],D=[],w=document.getElementById("chooseName"),b=document.getElementById("button-addon2"),L=document.getElementById("submit");v.push("Elf","Human","Dwarf");w.addEventListener("submit",r=>{r.preventDefault(),i=r.target[0].value,console.log(i),b.classList.add("disabled"),L.setAttribute("readonly","")});b.addEventListener("click",r=>{i=r.target.offsetParent[0].value,console.log(i),b.classList.add("disabled"),L.setAttribute("readonly","")});E.addEventListener("change",function(r){console.log(r);let t=r.target.value;switch(D.push(t),t){case"Elf":f=new u(`${i}`,100,20,"Elf");break;case"Human":f=new u(`${i}`,100,15,"Human");break;case"Dwarf":f=new u(`${i}`,100,20,"Dwarf")}});function N(){for(let r=0;r<v.length;r++){let t=document.createElement("option");E.appendChild(t),t.textContent=v[r]}}N();var H=[],y=document.getElementById("selectEnemies"),h,M=[];H.push("Dragon","Berserker","Golem","Assassin","Griffin","Werewolf");y.addEventListener("change",function(r){console.log(r);let t=r.target.value;M.push(t)});y.addEventListener("change",r=>{let t=r.target.value;switch(M.push(t),t){case"Assassin":h=new l("Sram",110,12);break;case"Berserker":h=new m("Sacrieur",110,20);break;case"Dragon":h=new c("Efrim",200,30);break;case"Golem":h=new d("Golem de fer",125,15);break;case"Griffin":h=new p("Griffon en mousse",120,20);break;case"Werewolf":h=new $("Loup perdu",150,25);break}console.log(h)});function S(){for(let r=0;r<H.length;r++){let t=document.createElement("option");y.appendChild(t),t.textContent=H[r]}}S();var x=document.getElementById("fight"),C="";x.addEventListener("click",()=>{let r=new g(f,h);r.toDeath();for(let t=0;t<r.stat.length;t++)C+=r.stat[t];document.getElementById("tablestat").innerHTML=C});})();
